
LED.out:     file format elf32-littlearm
LED.out
architecture: armv4t, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00000378 memsz 0x00000378 flags r-x
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000378  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.attributes 0000002e  00000000  00000000  00008378  2**0
                  CONTENTS, READONLY
  2 .comment      0000001f  00000000  00000000  000083a6  2**0
                  CONTENTS, READONLY
  3 .debug_info   00000160  00000000  00000000  000083c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000de  00000000  00000000  00008525  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000020  00000000  00000000  00008603  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000008e  00000000  00000000  00008623  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000e3  00000000  00000000  000086b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000012c  00000000  00000000  00008794  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 startup.o
00000004 l       *ABS*	00000000 UND_STACK_SIZE
00000004 l       *ABS*	00000000 ABT_STACK_SIZE
00000004 l       *ABS*	00000000 FIQ_STACK_SIZE
00000004 l       *ABS*	00000000 IRQ_STACK_SIZE
00000004 l       *ABS*	00000000 SVC_STACK_SIZE
00000010 l       *ABS*	00000000 MODE_USR
00000011 l       *ABS*	00000000 MODE_FIQ
00000012 l       *ABS*	00000000 MODE_IRQ
00000013 l       *ABS*	00000000 MODE_SVC
00000017 l       *ABS*	00000000 MODE_ABT
0000001b l       *ABS*	00000000 MODE_UND
0000001f l       *ABS*	00000000 MODE_SYS
00000080 l       *ABS*	00000000 I_BIT
00000040 l       *ABS*	00000000 F_BIT
00000000 l       .text	00000000 _vectors
00000020 l       .text	00000000 Reset_Addr
00000024 l       .text	00000000 Undef_Addr
00000028 l       .text	00000000 SWI_Addr
0000002c l       .text	00000000 PAbt_Addr
00000030 l       .text	00000000 DAbt_Addr
00000038 l       .text	00000000 FIQ_Addr
00000034 l       .text	00000000 IRQ_Addr
00000000 l    df *ABS*	00000000 LED.c
00000000 l    df *ABS*	00000000 
0000034c g     F .text	0000000c UNDEF_Routine
00000378 g       .text	00000000 _etext
00000168 g     F .text	00000088 initLCD
000002ec g     F .text	00000040 LCD_Cmd
40000200 g       .text	00000000 _bss_start
00000340 g     F .text	0000000c SWI_Routine
0000023c g     F .text	0000004c LCD_WriteChar
000001f0 g     F .text	0000004c enable
00000000 g       .text	00000000 _startup
40000200 g       .text	00000000 _bss_end
00000040 g       .text	00000000 Reset_Handler
00000338 g     F .text	00000008 FIQ_Routine
00000288 g     F .text	00000064 LCD_WriteString
00000138 g     F .text	00000030 main
40007edc g       *ABS*	00000000 _stack_end
000000d8 g     F .text	00000060 delay
0000032c g     F .text	0000000c IRQ_Routine
40000200 g       .text	00000000 _data
40000200 g       .text	00000000 _edata
40000200 g       .text	00000000 _end


